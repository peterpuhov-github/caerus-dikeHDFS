<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
    <property>
        <name>dfs.data.dir</name>
        <value>file:///opt/volume/datanode</value>
    </property>

    <property>
        <name>dfs.name.dir</name>
        <value>file:///opt/volume/namenode</value>
    </property>

    <property>
        <name>dfs.webhdfs.enabled</name>
        <value>true</value>
    </property>

    <property>
      <name>dfs.replication</name>
      <value>1</value>
      <description>Block Replication factor</description>
    </property>

    <property>
      <name>dfs.stream-buffer-size</name>
      <value>65536</value>
      <description>Block Replication factor</description>
    </property>

    <property>
      <name>dfs.datanode.handler.count</name>
      <value>1024</value>
      <description>Block Replication factor</description>
    </property>

   <property>
      <name>dfs.stream-buffer-size</name>
      <value>131072</value>
      <description>Determines how much data is buffered during read and write operations</description>
    </property>

   <property>
      <name>dfs.datanode.readahead.bytes</name>
      <value>0</value>
      <description>
          Datanode can use the posix_fadvise system call to explicitly page data
          into the operating system buffer cache ahead of the current reader's position.
      </description>
    </property>

   <property>
      <name>dfs.datanode.drop.cache.behind.reads</name>
      <value>true</value>
      <description>
          Automatically purge all data from the buffer cache after it is delivered to the client.
       </description>
    </property>

    <property>
      <name>dfs.permissions.enabled</name>
      <value>false</value>
    </property>
</configuration>
